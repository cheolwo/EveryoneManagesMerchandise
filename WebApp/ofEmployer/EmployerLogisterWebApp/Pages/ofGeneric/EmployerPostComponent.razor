@using BusinessView.ofDTO.ofCommon.ofEmployer
@using BusinessView.ofValidator.ofCommon.ofEmployer
@using BusinessView.ofViewModels.ofGeneric
@typeparam TEntity where TEntity : EmployerEntity, new()

@if (_EmployerPostViewModel == null || _EmployerPostViewModel.IsBusy)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
        <h3>EmployerPostComponent</h3>
        @foreach (var key in _EmployerPostViewModel.StringProperty.Keys)
        {
            <MudTextField @bind-Value="_EmployerPostViewModel.StringProperty[key]" Label="@key"></MudTextField>
        }
        @foreach (var key in _EmployerPostViewModel.IntProperty.Keys)
        {
            <MudTextField @bind-Value="_EmployerPostViewModel.IntProperty[key]" Label="@key"></MudTextField>
        }
        @foreach (var key in _EmployerPostViewModel.DateTimeProperty.Keys)
        {
            <MudDatePicker @bind-Date="_EmployerPostViewModel.DateTimeProperty[key]" Label="@key" />
        }
        <InputFile id="fileInput" OnChange="_EmployerPostViewModel.UploadFiles" hidden multiple />

        <MudButton HtmlTag="label"
               Variant="Variant.Filled"
               Color="Color.Primary"
               StartIcon="@Icons.Filled.CloudUpload"
               for="fileInput">
            Upload Files
        </MudButton>
        <MudButton OnClick="PostAsync">Post</MudButton>
        <MudButton OnClick="Validate">Validate</MudButton>
}
@code {
    [Parameter] public EmployerPostViewModel<TEntity> _EmployerPostViewModel { get; set; }
    public EmployerEntityValidator<TEntity>? _EmployerEntityValidator { get; set; }
    protected override async Task OnInitializedAsync()
    {
        _EmployerEntityValidator = (EmployerEntityValidator<TEntity>)_EmployerPostViewModel._employerActorContext.GetValidator<TEntity>();
    }
    public async Task PostAsync()
    {
        try
        {
            _EmployerPostViewModel.PropertyToEntity();
            await _EmployerPostViewModel.PostAsync();
        }
        catch (Exception e)
        {

        }
        finally
        {

        }
    }
    public void Validate()
    {
        _EmployerPostViewModel.PropertyToEntity();
    }
}
