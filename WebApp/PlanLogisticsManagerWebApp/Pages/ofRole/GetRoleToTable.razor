@using Microsoft.AspNetCore.Identity
@using System.Net.Http.Json
@inject RoleManager<IdentityRole> RoleManager
@inject NavigationManager _NavigationMangaer

@page "/Get/Role"
개발 3. 플랫폼 관리자 웹/앱 유저 역할관리 페이지
<MudButton OnClick="NavigateToCreatePage" Variant="Variant.Filled" Color="Color.Primary">Create</MudButton>
<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<IdentityRole,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
         <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>NormalizedName</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Sign">@context.NormalizedName</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
    <div style="min-width:200px;">
        <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.Name</MudText>
    </div>
</div>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private IdentityRole selectedItem1 = null;
    private HashSet< IdentityRole> selectedItems = new HashSet< IdentityRole>();

    private IEnumerable< IdentityRole> Elements = new List< IdentityRole>();

    protected override async Task OnInitializedAsync()
    {
        Elements = RoleManager.Roles.ToList();
        //await httpClient.GetFromJsonAsync<List< IdentityRole>>("webapi/periodictable");
    }

    private bool FilterFunc1(IdentityRole element) => FilterFunc(element, searchString1);

    private bool FilterFunc(IdentityRole element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.NormalizedName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        //if ($"{element.Id} {element.Position} {element.Molar}".Contains(searchString))
        //    return true;
        return false;
    }
    public void NavigateToCreatePage()
    {
        _NavigationMangaer.NavigateTo("/Create/Role");
    }
}
