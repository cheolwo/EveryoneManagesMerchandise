@using BusinessData.ofOrder.ofModel
@using BusinessLogic.ofManager.ofOrder
@inject ISOCommodityManager SOCommodityManager

@if(IsSelectedReturn)
{
}
 <MudButton OnClick="ClickSelectedEvent">SelecteItem</MudButton>
<MudTable Items="@SOCommodities" MultiSelection="true" @bind-SelectedItems="selectedItems1" Hover="@hover">
    <HeaderContent>
        <MudTh>거래일자</MudTh>
        <MudTh>주문명</MudTh>
        <MudTh>거래조건</MudTh>
        <MudTh>품질조건</MudTh>
        <MudTh>수량</MudTh>
        <MudTh>가격</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="거래일자">@context.CreateTime</MudTd>
        <MudTd DataLabel="주문명">@context.Name</MudTd>
        <MudTd DataLabel="거래조건">@context.Incorterms</MudTd>
        <MudTd DataLabel="품질조건">@context.QualityTerms</MudTd>
        <MudTd DataLabel="수량">@context.Quantity</MudTd>
        <MudTd DataLabel="가격">@context.Price</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent>
    <FooterContent> 
        <MudTd colspan="5">Select All</MudTd>
    </FooterContent>
</MudTable>
<MudText Inline="true">Selected items: @(selectedItems1==null ? "" : string.Join(", ", selectedItems1.OrderBy(x=>x.Name).Select(x=>x.Name)))</MudText>

@code {
    [CascadingParameter] public UserComponent? UserComponent { get; set; }
    [Parameter] public bool IsSelectedReturn { get; set; }
    [Parameter] public EventCallback<SOCommodity> SelectedSOcommodityId { get; set; }
    public IEnumerable<SOCommodity> SOCommodities = new List<SOCommodity>();
    protected override async Task OnInitializedAsync()
    {
        if(UserComponent != null)
        {
            SOCommodities = await SOCommodityManager.GetToListByUserAsync(UserComponent.IdentityUser);
        }
        else
        {
            SOCommodities = await SOCommodityManager.GetToListAsync();
        }
    }
    public void ClickSelectedEvent()
    {
        if(selectedItems1.Count > 0)
        {
            var sOCommodity = selectedItems1.FirstOrDefault();
            SelectedSOcommodityId.InvokeAsync(sOCommodity);
        }
    }
    private bool hover = true;
    private HashSet<SOCommodity> selectedItems1 = new HashSet<SOCommodity>();
}
