// <auto-generated />
using System;
using BusinessData.ofCommon.ofKamis.ofDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessData.Migrations.KamisDb
{
    [DbContext(typeof(KamisDbContext))]
    partial class KamisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, (int)1L, 1);

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisPartId");

                    b.ToTable("KamisCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KamisCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisGrade", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KamisGrade");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyAgriculturalProductShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyAgriculturalProductShippingUnitSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisCommodityId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KamisPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailSaleGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailShippingUnitSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholeSaleGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholeSaleShippingUnizSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholesaleShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisCommodityId");

                    b.HasIndex("KamisPartId");

                    b.ToTable("KamisKindofCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisCountryAdministrationPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisCountryAdministrationPartId");

                    b.ToTable("KamisMarket");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KamisPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisRetailPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisClsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisGradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisKindofCommodityId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KamisMarketId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yyyy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisKindofCommodityId");

                    b.HasIndex("KamisMarketId");

                    b.ToTable("KamisRetailPrice");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisWholeSalePrice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisClsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisGradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisKindofCommodityId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KamisMarketId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yyyy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisKindofCommodityId");

                    b.HasIndex("KamisMarketId");

                    b.ToTable("KamisWholeSalePrice");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", "KamisPart")
                        .WithMany("KamisCommodities")
                        .HasForeignKey("KamisPartId");

                    b.Navigation("KamisPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", "KamisCommodity")
                        .WithMany("KamisKindsofCommodity")
                        .HasForeignKey("KamisCommodityId");

                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", "KamisPart")
                        .WithMany("KamisKindsofCommodities")
                        .HasForeignKey("KamisPartId");

                    b.Navigation("KamisCommodity");

                    b.Navigation("KamisPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", "KamisCountryAdministrationPart")
                        .WithMany("KamisMakrets")
                        .HasForeignKey("KamisCountryAdministrationPartId");

                    b.Navigation("KamisCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisRetailPrice", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", "KamisKindofCommodity")
                        .WithMany("KamisRetailPrices")
                        .HasForeignKey("KamisKindofCommodityId");

                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", "KamisMarket")
                        .WithMany("KamisRetailPrices")
                        .HasForeignKey("KamisMarketId");

                    b.Navigation("KamisKindofCommodity");

                    b.Navigation("KamisMarket");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisWholeSalePrice", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", "KamisKindofCommodity")
                        .WithMany("KamisWholeSalePrices")
                        .HasForeignKey("KamisKindofCommodityId");

                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", "KamisMarket")
                        .WithMany("KamisWholeSalePrices")
                        .HasForeignKey("KamisMarketId");

                    b.Navigation("KamisKindofCommodity");

                    b.Navigation("KamisMarket");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.Navigation("KamisKindsofCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", b =>
                {
                    b.Navigation("KamisMakrets");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.Navigation("KamisRetailPrices");

                    b.Navigation("KamisWholeSalePrices");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.Navigation("KamisRetailPrices");

                    b.Navigation("KamisWholeSalePrices");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", b =>
                {
                    b.Navigation("KamisCommodities");

                    b.Navigation("KamisKindsofCommodities");
                });
#pragma warning restore 612, 618
        }
    }
}
