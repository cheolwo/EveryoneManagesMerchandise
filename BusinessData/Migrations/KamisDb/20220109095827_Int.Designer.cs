// <auto-generated />
using BusinessData.ofCommon.ofKamis.ofDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessData.Migrations.KamisDb
{
    [DbContext(typeof(KamisDbContext))]
    [Migration("20220109095827_Int")]
    partial class Int
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, (int)1L, 1);

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisPartId");

                    b.ToTable("KamisCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KamisCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisDayPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisKindofCommodityId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("KamisMarketId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisKindofCommodityId");

                    b.HasIndex("KamisMarketId");

                    b.ToTable("KamisDayPrice");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyAgriculturalProductShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyAgriculturalProductShippingUnitSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcoFriendlyGrades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisCommodityId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailSaleGrades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailShippingUnitSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholeSaleGrades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholeSaleShippingUnizSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WholesaleShippingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisCommodityId");

                    b.ToTable("KamisKindofCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisSubCountryAdministrationPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisSubCountryAdministrationPartId");

                    b.ToTable("KamisMarket");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KamisPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisSubCountryAdministrationPart", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Docs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageofInfos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KamisCountryAdministrationPartId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KamisCountryAdministrationPartId");

                    b.ToTable("KamisSubCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", "KamisPart")
                        .WithMany("KamisCommodities")
                        .HasForeignKey("KamisPartId");

                    b.Navigation("KamisPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisDayPrice", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", "KamisKindofCommodity")
                        .WithMany("KamisDayPrices")
                        .HasForeignKey("KamisKindofCommodityId");

                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", "KamisMarket")
                        .WithMany("KamisDaysPrices")
                        .HasForeignKey("KamisMarketId");

                    b.Navigation("KamisKindofCommodity");

                    b.Navigation("KamisMarket");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", "KamisCommodity")
                        .WithMany("KamisKindsofCommodity")
                        .HasForeignKey("KamisCommodityId");

                    b.Navigation("KamisCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisSubCountryAdministrationPart", "KamisSubCountryAdministrationPart")
                        .WithMany("KamisMarkets")
                        .HasForeignKey("KamisSubCountryAdministrationPartId");

                    b.Navigation("KamisSubCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisSubCountryAdministrationPart", b =>
                {
                    b.HasOne("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", "KamisCountryAdministrationPart")
                        .WithMany("KamisSubCountryAdministrationParts")
                        .HasForeignKey("KamisCountryAdministrationPartId");

                    b.Navigation("KamisCountryAdministrationPart");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCommodity", b =>
                {
                    b.Navigation("KamisKindsofCommodity");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisCountryAdministrationPart", b =>
                {
                    b.Navigation("KamisSubCountryAdministrationParts");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisKindofCommodity", b =>
                {
                    b.Navigation("KamisDayPrices");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisMarket", b =>
                {
                    b.Navigation("KamisDaysPrices");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisPart", b =>
                {
                    b.Navigation("KamisCommodities");
                });

            modelBuilder.Entity("BusinessData.ofCommon.ofKamis.ofModel.KamisSubCountryAdministrationPart", b =>
                {
                    b.Navigation("KamisMarkets");
                });
#pragma warning restore 612, 618
        }
    }
}
